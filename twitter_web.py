# -*- coding: utf-8 -*-
"""Twitter-Web.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/150ULYWJLGH1F98R5hrIeC5jOj0hlsMb7

# Installation and import area
##### (Download the credentials.py)
"""

pip install tweepy

pip install spanish_sentiment_analysis

pip install panda

import math
import tweepy

# Download the credentials.py
import credentials
# Credentials:
auth = tweepy.OAuthHandler(credentials.API_KEY, credentials.API_SECRET_KEY)
auth.set_access_token(credentials.ACCESS_TOKEN, credentials.ACCESS_TOKEN_SECRET)

api = tweepy.API(auth)

import pandas as pd
#import json


# Sentiment:
from classifier import SentimentClassifier
clf = SentimentClassifier()

# Web Scrapping
import requests
from bs4 import BeautifulSoup

"""# Tweets"""

# Date frame of downloaded Tweets
id = None
count = 0
i = 0
magicword = 'Movistar'        #input('¿Que palabra desea buscar?')
contador = 150              #int(input('¿Cuantos Tweets desea buscar?'))
filename = magicword+'_Tweeter.csv'
Tabla = pd.DataFrame(columns=['Screen Name',
                              'Coordinates',
                              'Location',
                              'Followers',
                              'Sentiment',
                              'Tweet'
                              ])
while count <= contador:
    tweets = api.search(q=magicword, lang='es', tweet_mode='extended', max_id=id)
    for tweet in tweets:
        if tweet.full_text.startswith('RT'):
            count += 1
            continue
        Tabla.loc[i] = [tweet.user.screen_name
                       ,tweet.coordinates
                       ,tweet.user.location
                       ,int(tweet.user.followers_count)
                       #Sentiment value:
                       ,round((clf.predict(tweet.full_text) - 0.5), ndigits=2)
                       ,tweet.full_text
                       ]
        count += 1
        i += 1
    id = tweet.id

# Add calculated column in a specific place
Tabla['Weight'] = Tabla['Followers'] * Tabla['Sentiment']
cols = list(Tabla.columns)
Tabla = Tabla[cols[0:5] + [cols[-1]] + cols[5:6]]

# From the dataframe create a csv document
Tabla.to_csv(filename, index=False)

# Show the dataframe
Tabla

"""# Web Scrapping"""

#Foro Movistar
r = requests.get('https://foro.movistar.com.ar/categories/ayuda-productos-y-servicios')
soup = BeautifulSoup(r.text, 'html.parser')
j = 0
P = 1
M = 15
#Max = int(soup.find(class_=" Pager-p p-155 LastPage").text)

filename2 = 'Movistar_Web.csv'
items = soup.find_all(class_="ItemContent Discussion")
Tabla2 = pd.DataFrame(columns=['Author'
                              ,'Menssage'
                              ,'Views'
                              ,'CommentCount'
                              ,'ScoreHidden'
                              ,'Answered'
                              ,'Closed'
                              ,'CommentBy'
                              ,'CommentDate'
                              ])
while P <= M:
  for item in items:
      if item.find(class_="Tag QnA-Tag-Answered") == None:
        Answered = False
      else:
        Answered = True
      if item.find(class_="Tag Tag-Closed") == None:
        Closed = False
      else:
        Closed = True
      Tabla2.loc[j] = [item.find(class_="MItem DiscussionAuthor").text
                      ,item.find(class_="Title").a.text
                      ,item.find(class_="MItem MCount ViewCount").find(class_="Number")["title"].split()[0]
                      ,item.find(class_="MItem MCount CommentCount").find(class_="Number").text
                      ,item.find(class_="MItem MCount DiscussionScore Hidden").find(class_="Number").text
                      ,Answered
                      ,Closed
                      ,item.find(class_="MItem LastCommentBy").a.text
                      ,item.find(class_="MItem LastCommentDate").time["title"]
                      ]
      j += 1
  P += 1
  r = requests.get('https://foro.movistar.com.ar/categories/ayuda-productos-y-servicios/p' + str(P))

Tabla2.to_csv(filename2, index=False)
Tabla2